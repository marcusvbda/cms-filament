name: CI Pipeline

on:
  pull_request:
    branches:
      - master
    types:
      - closed
  push:
    branches:
      - master

jobs:
  deploy:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.5.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Deploy to EC2
        run: |
          ssh -o StrictHostKeyChecking=no ubuntu@ec2-44-222-201-33.compute-1.amazonaws.com << EOF
            set -e  # Para parar a execução se qualquer comando falhar
            cd cms-filament

            echo "Atualizando código..."
            git reset --hard HEAD
            git pull origin master

            echo "Colocando aplicação em modo de manutenção..."
            sudo docker exec Filament-CMS_APPLICATION php artisan down

            echo "Instalando dependências..."
            sudo docker exec Filament-CMS_APPLICATION composer install --no-interaction --prefer-dist --optimize-autoloader
            sudo docker exec Filament-CMS_APPLICATION npm install
            sudo docker exec Filament-CMS_APPLICATION npm run build

            echo "Executando migrações e otimizando..."
            sudo docker exec Filament-CMS_APPLICATION php artisan migrate --force
            sudo docker exec Filament-CMS_APPLICATION php artisan config:cache
            sudo docker exec Filament-CMS_APPLICATION php artisan route:cache
            sudo docker exec Filament-CMS_APPLICATION php artisan optimize:clear
            sudo docker exec Filament-CMS_APPLICATION php artisan optimize

            echo "Reiniciando serviços..."
            sudo docker exec Filament-CMS_APPLICATION php artisan up

            echo "Deploy finalizado com sucesso!"
          EOF
